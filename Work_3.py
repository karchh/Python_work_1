# Задача 1. Вручную создайте список с целыми числами,
# которые повторяются. Получите новый список,
# который содержит уникальные (без повтора) элементы исходного списка.
# *Подготовьте два решения, короткое и длинное,
# которое не использует другие коллекции помимо списков.

# lst = [1, 2, 3, 4, 5, 4, 3, 2, 1]
# result = []
# print(list(set(lst)))
# for i in lst:
#     if i not in result:
#         result.append(i)
# print(result)



# Задача 2. Пользователь вводит данные.
# Сделайте проверку данных и преобразуйте
# если возможно в один из вариантов ниже:
# целое положительное число
# вещественное положительное или отрицательное число
# строку в нижнем регистре, если в строке есть хотя бы одна заглавная буква
# строку в верхнем регистре в остальных случаях

# text =  input("Введите данные: ")

# if text.isnumeric():
#     print(int(text))
# elif text.replace('.','', 1).isnumeric():
#     print(float(text))
# elif text[0] == '-' and text.replace('.','', 1).replace('-','', 1).isnumeric():
#     print(float(text))
# elif not text.islower():
#     print(text.lower())
# else:
#     print(text.upper())



# Задача 3. Создайте вручную кортеж содержащий элементы разных типов.
# Получите из него словарь списков,
# где ключ - тип элемента,
# а значение - список элементов данного типа.

# my_tuple = (123, 2.5, 44, 4.6, 'word', True, 'Sun',)
# my_dict = {}
# for i in my_tuple:
#     count = my_dict.setdefault(type(i), [])
#     count.append(i)
# print(my_dict)



# Задача 4. Создайте вручную список с повторяющимися элементами.
# Удалите из него все элементы, которые встречаются дважды.

# my_list = [1, 2, 3, 8, 4, 5, 7, 4, 3, 2, 1, 10]
# for i in my_list:
#     if my_list.count(i) == 2:
#         for j in range(2):
#             my_list.remove(i)
# print(my_list)



# Задача 5. Создайте вручную список с повторяющимися целыми числами.
# Сформируйте список с порядковыми номерами нечётных
# элементов исходного списка. Нумерация начинается с единицы.

# my_list = [1, 3, 6, 6, 6, 4, 5, 11, 4, 3, 2, 1, 1, 10]
# result = []
# for k, v in enumerate(my_list, 1):
#     if v % 2:
#         result.append(k)
# print(result)



# Задача 6. Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# Строки нумеруются начиная с единицы
# Слова выводятся отсортированными согласно кодировки Unicode
# Текст выравнивается по правому краю так,
# чтобы у самого длинного слова был один пробел между ним и номером строки

# lst = sorted(input().split())
# count = len(max(lst, key=len))
# for k, v in enumerate(lst, 1):
#     print(f'{k} {v:>{count}}')



# Задача 7. Пользователь вводит строку текста.
# Подсчитайте сколько раз встречается каждая
# буква в строке без использования метода count и с ним.
# Результат сохраните в словаре,
# где ключ - символ, а значение - частота встречи символа в строке.
# Обратите внимание на порядок ключей.
# Объясните почему они совпадают или не совпадают в ваших решениях.

# _string = input("Введите строку: ")
# _dict = {}

# for letter in _string:
#     _dict.setdefault(letter, 0)
#     _dict[letter] += 1
# print(_dict)



# hike = {
# 'Друг1': ('Рюкзак', 'Палатка', 'Спальник', 'Фонарик'),
# 'Друг2': ('Рюкзак', 'Палатка', 'Котелок', 'Кружка', 'Спички'),
# 'Друг3': ('Рюкзак', 'Палатка', 'Спички', 'Складной стул')
# }


# def pack_backpack(items, max_weight):
#     possible_items = []
#     for item, weight in items.items():
#         if weight <= max_weight:
#             possible_items.append(item)
#             max_weight -= weight
#     return possible_items

# items = {'ключи': 0.3, 'кошелек': 0.2, 'телефон': 0.5, 'зажигалка': 0.1}
# max_weight = 1
# print(pack_backpack(items, max_weight)) 


